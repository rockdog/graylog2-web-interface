<h1>Rules of stream <span class="highlighted"><%= @stream.title_possibly_disabled %></span></h1>
<div class="description">
  Streams can be used to store specific views on your messages. Define filter rules for each stream and quickly select
  them later. Example: Create a stream "All database messages of host www15" that only shows messages from host "www15" which
  include the string "MySQL". The rules are AND connected.
</div>

<% if @stream.streamrules.blank? %>
  <strong>No rules configured for this stream.</strong>
  <br /><br />
<% else %>
  <% @stream.streamrules.each do |rule| %>
    <div class="lines-line">
      <h3><%= raw(streamrule_to_human(rule)) %></h3>
      <%= link_to "Delete", stream_streamrule_path(@stream, rule), :method => :delete, :confirm => "Really delete stream rule?" %>
      |
      <%= link_to "Edit", "", :class => "stream-rule-edit-link", "data-rule-id" => rule.id %>

      <div class="stream-rule-edit" id="stream-rule-edit-<%= rule.id %>">
        <%= form_tag(stream_streamrule_path(@stream, rule), :method => :put) do %>
          <%= hidden_field_tag "rule_id", rule.id %>
          <%= label_tag :value %><br />
          <%= streamrule_input_fields(rule.value, "", false, "stream-value-edit")[rule.rule_type] %>

          <br /><br />
          <%= awesome_submit_link "Update rule" %>
        <% end %>
      </div>

    </div>
  <% end %>
<% end %>

<h2>Add rule:</h2>
<%= form_for @new_rule, :url => stream_streamrules_path(@stream) do |f| %>
  <%= f.hidden_field :stream_id, :value => @stream.id %>
  <%= f.select :rule_type, options_for_select(Streamrule.get_types_for_select_options(:streams).sort, :selected => Streamrule::TYPE_MESSAGE) %>
  <%= streamrule_input_fields_for_add_form %>
  <span id="stream-value-additional-field-help" class="stream-value-help" style="display: none;"><%= tooltip("the-additional-field-stream-rule") %></span>
  <%= awesome_submit_link "Add" %>
<% end %>